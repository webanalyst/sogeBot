name: Releases

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # load full history

      - name: install node v14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Build a bot
        run: make

      - name: Zip a bot
        run: make pack

      - name: Generate changelog
        id: log
        run: echo ::set-output name=MESSAGE::$(node tools/changelog.js --escape generate)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: SOGEBOT ${{ github.ref }}
          body: |
            ${{ steps.log.outputs.MESSAGE }}
          draft: false
          prerelease: false

      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ steps.create_release.outputs.id }}
          args: '*.zip'

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Build & Push to GitHub Package with ref
        uses: opspresso/action-docker@v0.2.1
        env:
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          REGISTRY: docker.pkg.github.com
          IMAGE_NAME: ${{ secrets.GITHUB_REGISTRY_IMAGE }}
          TAG_NAME: release:${{ steps.get_version.outputs.VERSION }}
      - name: Build & Push to GitHub Package as latest
        uses: opspresso/action-docker@v0.2.1
        env:
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          REGISTRY: docker.pkg.github.com
          IMAGE_NAME: ${{ secrets.GITHUB_REGISTRY_IMAGE }}
          TAG_NAME: release:latest
      - name: Docker Build & Push to Docker Hub
        uses: opspresso/action-docker@v0.2.8
        with:
          args: --docker
        env:
          USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          DOCKERFILE: "Dockerfile"
          IMAGE_NAME: ${{ secrets.DOCKER_REGISTRY_IMAGE_RELEASE }}
          TAG_NAME: ${{ steps.get_version.outputs.VERSION }}
          LATEST: "true"

