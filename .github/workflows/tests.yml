name: Tests

on:
  push:
    branches:
      - 'master'
  pull_request:

jobs:
  eslint:
    name: ESLint check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: All test should be run - tests are not containing describe.only
      run: |
          if ! grep -r -l 'describe.only' ./test/; then
            exit 0
          else
            exit 1
          fi;
    - name: install node v14
      uses: actions/setup-node@v2
      with:
        node-version: 14
        check-latest: true
    - name: Install latest npm
      run: |
        npm install -g npm@latest
    - name: Install eslint and dependencies
      run: |
        make dependencies
    - name: Run eslint
      run: ENV=development make eslint
    - name: Run jsonlint
      run: ENV=development make jsonlint
  sqlite:
    name: SQLite tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - id: log
      name: Load commit message for skip test check
      run: echo ::set-output name=MESSAGE::$(git log --no-merges -1 --pretty=format:%s%b)
    - name: install node v14
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      uses: actions/setup-node@v2
      with:
        node-version: 14
        check-latest: true
    - name: Install latest npm
      run: |
        npm install -g npm@latest
    - name: Install all dependencies and build just a bot
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: ENV=development make info clean dependencies bot
    - name: Set proper db to use
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: npm run test:config:sqlite
    - name: Run migration test
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: npm run test:migration
    - name: Run mocha
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: npm test
    - uses: codecov/codecov-action@v1
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        name: codecov-sqlite # optional
        flags: sqlite
  postgres:
    name: PostgreSQL tests
    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: sogebot
        ports:
          - 5432:5432
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - id: log
      name: Load commit message for skip test check
      run: echo ::set-output name=MESSAGE::$(git log --no-merges -1 --pretty=format:%s%b)
    - name: install node v14
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      uses: actions/setup-node@v2
      with:
        node-version: 14
        check-latest: true
    - name: Install latest npm
      run: |
        npm install -g npm@latest
    - name: Install all dependencies and build just a bot
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: ENV=development make info clean dependencies bot
    - name: Set proper db to use
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: npm run test:config:postgres
    - name: Run migration test
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: npm run test:migration
    - name: Run mocha
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: npm test
    - uses: codecov/codecov-action@v1
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        name: codecov-postgres # optional
        flags: postgres
  mysql:
    name: MySQL/MariaDB tests
    runs-on: ubuntu-latest
    steps:
    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
    - uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3306 # Optional, default value is 3306. The port of host
        container port: 3306 # Optional, default value is 3306. The port of container
        character set server: 'utf8mb4' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
        collation server: 'utf8mb4_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
        mysql version: '5.7' # Optional, default value is "latest". The version of the MySQL
        mysql database: 'sogebot' # Optional, default value is "test". The specified database which will be create
        mysql root password: 'Passw0rd' # Required if "mysql user" is empty, default is empty. The root superuser password
    - uses: actions/checkout@master
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - id: log
      name: Load commit message for skip test check
      run: echo ::set-output name=MESSAGE::$(git log --no-merges -1 --pretty=format:%s%b)
    - name: install node v14
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      uses: actions/setup-node@v2
      with:
        node-version: 14
        check-latest: true
    - name: Install latest npm
      run: |
        npm install -g npm@latest
    - name: Install all dependencies and build just a bot
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: ENV=development make info clean dependencies bot
    - name: Set proper db to use
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: npm run test:config:mysql
    - name: Run migration test
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: npm run test:migration
    - name: Run mocha
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: npm test
    - uses: codecov/codecov-action@v1
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        name: codecov-mysql # optional
        flags: mysql
  fullbuild:
    name: Make test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - id: log
      name: Load commit message for skip test check
      run: echo ::set-output name=MESSAGE::$(git log --no-merges -1 --pretty=format:%s%b)
    - name: install node v14
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      uses: actions/setup-node@v2
      with:
        node-version: 14
        check-latest: true
    - name: Install latest npm
      run: |
        npm install -g npm@latest
    - name: Install all dependencies and build everything
      if: "!contains(steps.log.outputs.MESSAGE, '[skip-tests]')"
      run: ENV=development make